@import url('https://fonts.googleapis.com/css?family=Montserrat:400,700&display=swap');

/*Custom Properties  (variables)*/

:root {
    --leading: 2em;
}

body {
    font-family: 'Montserrat', sans-serif;
    margin: 8; 
}
.hero-bg{
    background: darkcyan url('../images/oranges.jpg');
    color: white;
    text-align: center;
    padding-bottom: 4em; /*this is to add white space to the bottom*/
    
}
header{
    padding: 1em 0;
}
 
.hero-bg a {
    color: white;
    text-decoration: none;
    font-weight: bold;
    font-size: 1.2rem;
    
}

section{
    margin: 0 1em;
}

h1 {
    font-size: 2.5rem;
    margin: 2em 0 1.2em;
}

h1 span{
    text-transform: uppercase;
    display: block;
    font-size: 1.4rem;
    position: relative;
    z-index: 1;
}

h1 span::before{
    content: ' ';
    position: absolute;
    width: 3em;
    background: aqua;
    height: .4em;
    bottom: 0;
    z-index: -1;
    margin-left: -.3em;
}

.hero-bg p{   /*this will affect the element <p> in the .hero section*/
    font-weight: bold;
    margin: 0 1em 3em;
}

 .form-container {
    background-color: white;
    margin: 2em -1em 0;
    padding: 2em;
}


label{
    color: #2d7d98;
    font-weight: bold;
    display: block;
    margin-bottom: 1em;
    font-size: 1.2em;

}

input[type=text] { 
    border: 2px solid #707070;
    width: 100%;
    padding : 1em;
    border-radius: .5em;
    box-sizing: border-box;
    margin-top: 1.2em;
}

.form-container p {
    color: gray;
    margin-bottom: 1.5em;
    font-weight: normal;
    margin-top: .3em;
    font-size: .9em;
}

input[type=button] {
    background-color: orange;
    border: none;
    width: 100%;
    font-size: 1.3em;
    color: white;
    font-weight: bold;
    padding: .5em;
    border-radius: .5em;
    cursor: pointer; 
}

input[type=button]:hover {
    background-color: rgb(160, 77, 9)
}

.authentic {
    margin: 0;
}

h2 {
     text-transform: uppercase;
     position: relative;
}

h2::before {
    content: ' ';
    position: absolute;
    width: 8em;
    background: rgb(26, 153, 238);
    height: .4em;
    bottom: 0;
    z-index: -1;
    margin-left: -.3em;
}

.right-col {
    text-align: center;
    margin: 3em 1em;
}

img { 
    width: 100%;
}

p {
    line-height: var(--leading);
}

.overlay {
    position: absolute;
    height: 100vh;
    width: 100%;
    background: rgba(0,0,0,.9);
    z-index: 1;
    place-content: center;
    color:white;
    display: none;
    opacity: 0;
}

.animate-overlay {
    animation: overlay 3s forwards;

}
@media (min-width: 730px){
    section{
        margin: 0 4em;
    }
    .form-container {
        margin: 2em -4em 0;
    }
}

@media (min-width: 930px){
  
    .hero-bg {
        text-align: left;       
    }
    .hero-bg p {

        margin: 0 0 3em;

    }
    .hero-bg section {
        width: 65%;
    }

    .form-container {
        margin: 2em 0 0;
        padding: 2em;
        border-radius: .5em;
        box-shadow: 10px 10px 10px rgba(0,0, 0, 3);

    }
    form{
        display: flex;

    }
    
    .form-left {
        width: 70%;
    }

    label {
        margin: 0;
    }
    
    input[type="button"] {
        height: fit-content;
        font-size: 1.1em;
        margin-left: 1em;
        margin-top: 2.2em;
        padding: .7em 0;
        width: 30%;
    }

    .hero-bg p {
        margin-bottom: 0;
    }

    /*For this part section authentic  divide the 2 content  and with the hel
    of grid template is able to orient the direction, according to the
    deifnition of grid-template-areas: bowl contet;*/
    section.authentic {
        display: grid;
        grid-template-columns: repeat(2,50%);
        grid-template-areas: 
            "bowl content";
    }

    .right-col {
        grid-area: content;
        padding: 0 10%;
        text-align: left;
        align-self: center;
    }

    img {
        grid-area: bowl;
    }

    h2 {
        margin: 0;
    }

}

/*the dot (.) is used to style the classes*/
.top {
    animation: fadeIn 2s forwards;
}

@keyframes fadeIn {
    from{
        opacity: 0;
        transform: translateY(-2em);
    }   
    to {
        opacity: 1;
        transform: translateY(0);
    } 
}

@keyframes overlay {

    0%    {
        opacity: 0;
    }

    30% {
        opacity: 1;
    }

    70% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }

}